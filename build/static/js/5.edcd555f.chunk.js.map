{"version":3,"sources":["../node_modules/classnames/index.js","components/filter/FilterStyled.js","redux/contacts/contactsSelectors.js","components/filter/Filter.js","components/contactsForm/ContactsFormStyled.js","services/contacts_api.js","redux/contacts/contactsOperations.js","components/contactsForm/ContactsForm.js","components/contactsList/ContactsListStyled.js","../node_modules/react-bootstrap/esm/ThemeProvider.js","../node_modules/react-bootstrap/esm/Table.js","components/contactsList/ContactsList.js","components/SectionStyled.js","components/Section.js","pages/ContactPageStyled.js","pages/ContactPage.js","icons/project_sprites.svg"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","FilterStyled","styled","label","getLoading","state","contacts","isLoading","getFilter","filter","getAllContacts","items","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","Filter","dispatch","useDispatch","useSelector","className","type","value","pattern","title","required","onChange","e","inputFilter","target","setFilter","ContactsFormStyled","div","baseURL","getContacts","a","axios","get","response","res","keys","data","map","item","id","Error","addContact","post","deleteContact","delete","addContactOperation","user","getState","addContactsRequest","addContactsSuccess","addContactsError","message","groupContacts","initialState","number","group","ContactsForm","useState","setContact","allContacts","useEffect","getContactsRequest","getContactsSuccess","getContactsError","onHandleChange","prev","onHandleSubmit","preventDefault","some","alert","onSubmit","href","sprite","toUpperCase","ContactsListStyled","ThemeContext","React","createContext","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","prefixes","useContext","ThemeProvider","_excluded","Table","forwardRef","_ref","ref","bsPrefix","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","table","createElement","_extends","responsiveClass","ContactsList","console","log","onClick","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","SectionStyled","section","Section","children","ContactPageContainer","connect","color","height","width"],"mappings":"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","file":"static/js/5.edcd555f.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import styled from \"styled-components\";\r\n\r\nexport const FilterStyled = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 280px;\r\n  padding: 10px;\r\n  border: 1px solid lightgray;\r\n  border-radius: 16px;\r\n\r\n  .inputFilter {\r\n    height: 30px;\r\n    width: 100%;\r\n    padding-left: 8px;\r\n    margin: 5px 0;\r\n    outline: none;\r\n    border: 1px solid cornflowerblue;\r\n    border-radius: 14px;\r\n\r\n    &:focus {\r\n      outline: none;\r\n      border: 2px solid lightblue;\r\n    }\r\n  }\r\n`;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.contacts.isLoading;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getAllContacts = (state) => state.contacts.items;\r\n\r\n// const getFilteredContacts = state => state.contacts.items.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n\r\n// export const getFilteredContacts = (state) => {\r\n//   const contacts = getAllContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return contacts.filter((contact) =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n\r\n//мемоизация селектора\r\nexport const getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/contacts/contactsAction\";\r\nimport { FilterStyled } from \"./FilterStyled\";\r\nimport { getFilter } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const onFilterChange = (e) => {\r\n    const inputFilter = e.target.value;\r\n    dispatch(setFilter(inputFilter));\r\n  };\r\n  return (\r\n    <FilterStyled>\r\n      Find contacts by name:\r\n      <input\r\n        className=\"inputFilter\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Начните вводить имя контакта, который хотите найти\"\r\n        required\r\n        onChange={onFilterChange}\r\n      />\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsFormStyled = styled.div`\r\n  .phoneForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 280px;\r\n    padding: 10px;\r\n    border: 1px solid lightgray;\r\n    border-radius: 16px;\r\n  }\r\n  .labelForm {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 5px;\r\n    position: relative;\r\n  }\r\n  .inputForm {\r\n    height: 30px;\r\n    width: 100%;\r\n    padding-left: 8px;\r\n    margin: 5px 0;\r\n    outline: none;\r\n    border: 1px solid cornflowerblue;\r\n    border-radius: 14px;\r\n  }\r\n  .inputForm:focus + .icon-user,\r\n  .inputForm:not(:placeholder-shown) + .icon-user {\r\n    opacity: 0;\r\n  }\r\n  .inputForm:not(:placeholder-shown)::placeholder {\r\n    opacity: 0;\r\n  }\r\n  .inputForm:focus::placeholder {\r\n    opacity: 0;\r\n  }\r\n  .inputForm::placeholder {\r\n    color: cornflowerblue;\r\n    padding-left: 25px;\r\n    font-size: 14px;\r\n    transition: opacity 300ms linear;\r\n  }\r\n  .icon-user {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    width: 12px;\r\n    height: 12px;\r\n    fill: cornflowerblue;\r\n    transition: opacity 300ms linear;\r\n  }\r\n  .buttonForm {\r\n    align-self: center;\r\n    width: 140px;\r\n    height: 24px;\r\n    background-color: cornflowerblue;\r\n    border: none;\r\n    border-radius: 14px;\r\n    color: white;\r\n    text-transform: uppercase;\r\n    padding: 0 20px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://phonebook-d66d1-default-rtdb.firebaseio.com\";\r\n\r\nexport const getContacts = async () => {\r\n  try {\r\n    const response = await axios.get(baseURL + \"/contacts.json\");\r\n    const res = Object.keys(response.data).map((item) => ({\r\n      id: item,\r\n      ...response.data[item],\r\n    }));\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const addContact = async (contact) => {\r\n  try {\r\n    const response = await axios.post(baseURL + \"/contacts.json\", contact);\r\n    return { ...contact, id: response.data.name };\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n\r\nexport const deleteContact = async (id) => {\r\n  try {\r\n    await axios.delete(baseURL + `/contacts/${id}.json`);\r\n  } catch (error) {\r\n    throw new Error(error);\r\n  }\r\n};\r\n","import {\r\n  addContact,\r\n  deleteContact,\r\n  getContacts,\r\n} from \"../../services/contacts_api\";\r\n\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from \"./contactsAction\";\r\n\r\nexport const getContactsOperation = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(getContactsRequest());\r\n    const res = await getContacts();\r\n    dispatch(getContactsSuccess(res));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContactOperation = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(addContactsRequest());\r\n    //запрос к backend на добавление одного контакта, возвращает id\r\n    const res = await addContact(user);\r\n    //обоновляем state c id контакта, полученного из базы\r\n    dispatch(addContactsSuccess({ ...res }));\r\n  } catch (error) {\r\n    dispatch(addContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const deleteContactOperation = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch(deleteContactsRequest());\r\n    await deleteContact(id);\r\n    dispatch(deleteContactsSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactsError(error.message));\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ContactsFormStyled } from \"./ContactsFormStyled\";\r\nimport {\r\n  addContactOperation,\r\n  getContactsOperation,\r\n} from \"../../redux/contacts/contactsOperations\";\r\nimport sprite from \"../../icons/project_sprites.svg\";\r\nimport { getAllContacts } from \"../../redux/contacts/contactsSelectors\";\r\n\r\nconst groupContacts = [\"all\", \"family\", \"friends\", \"work\"];\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  group: groupContacts[0],\r\n};\r\n\r\nconst ContactsForm = () => {\r\n  const [contact, setContact] = useState({ ...initialState });\r\n\r\n  const allContacts = useSelector(getAllContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContactsOperation());\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setContact((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const onHandleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      allContacts.some(\r\n        (item) => item.name.toLowerCase() === contact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(contact.name + \" is already in contact list\");\r\n      return contact;\r\n    }\r\n    dispatch(addContactOperation({ ...contact }));\r\n    setContact({ ...initialState });\r\n  };\r\n\r\n  return (\r\n    <ContactsFormStyled>\r\n      <form className=\"phoneForm\" onSubmit={onHandleSubmit}>\r\n        <label className=\"labelForm\">\r\n          Name:\r\n          <input\r\n            className=\"inputForm\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={contact.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={onHandleChange}\r\n          />\r\n          <svg className=\"icon-user\">\r\n            <use href={sprite + \"#icon-user\"} />\r\n          </svg>\r\n        </label>\r\n        <label className=\"labelForm\">\r\n          Number:\r\n          <input\r\n            className=\"inputForm\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={contact.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={onHandleChange}\r\n          />\r\n          <svg className=\"icon-user\">\r\n            <use href={sprite + \"#icon-phone\"} />\r\n          </svg>\r\n        </label>\r\n        <label className=\"labelForm\">\r\n          Group:\r\n          <select name=\"group\" className=\"inputForm\" onChange={onHandleChange}>\r\n            {groupContacts.map((item) => (\r\n              <option value={item} key={item}>\r\n                {item.toUpperCase()}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n        <button type=\"submit\" className=\"buttonForm\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </ContactsFormStyled>\r\n  );\r\n};\r\n\r\nexport default ContactsForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsListStyled = styled.div`\r\n  margin-top: 20px;\r\n  width: 320px;\r\n  table,\r\n  th,\r\n  td {\r\n    color: darkblue;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .contactDeleteBtn {\r\n    position: relative;\r\n    width: 24px;\r\n    height: 24px;\r\n    background-color: cornflowerblue;\r\n    border: none;\r\n    border-radius: 14px;\r\n    color: white;\r\n    text-transform: uppercase;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n  }\r\n  .icon-user {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin: -6px 0 0 -6px;\r\n    width: 12px;\r\n    height: 12px;\r\n    fill: white;\r\n    transition: opacity 300ms linear;\r\n  }\r\n`;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { useContext, useMemo } from 'react';\nvar ThemeContext = /*#__PURE__*/React.createContext({});\nvar Consumer = ThemeContext.Consumer,\n    Provider = ThemeContext.Provider;\n\nfunction ThemeProvider(_ref) {\n  var prefixes = _ref.prefixes,\n      children = _ref.children;\n  var copiedPrefixes = useMemo(function () {\n    return _extends({}, prefixes);\n  }, [prefixes]);\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: copiedPrefixes\n  }, children);\n}\n\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  var prefixes = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\n\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  var isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  var _opts = opts,\n      prefix = _opts.prefix,\n      _opts$forwardRefAs = _opts.forwardRefAs,\n      forwardRefAs = _opts$forwardRefAs === void 0 ? isClassy ? 'ref' : 'innerRef' : _opts$forwardRefAs;\n  var Wrapped = /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n    var props = _extends({}, _ref2);\n\n    props[forwardRefAs] = ref;\n    var bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      bsPrefix: bsPrefix\n    }));\n  });\n  Wrapped.displayName = \"Bootstrap(\" + (Component.displayName || Component.name) + \")\";\n  return Wrapped;\n}\n\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ContactsListStyled } from \"./ContactsListStyled\";\r\nimport { deleteContactOperation } from \"../../redux/contacts/contactsOperations\";\r\nimport { getFilteredContacts } from \"../../redux/contacts/contactsSelectors\";\r\nimport sprite from \"../../icons/project_sprites.svg\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst ContactsList = () => {\r\n  let i = 0;\r\n\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getFilteredContacts);\r\n  console.log(\"contacts\", contacts);\r\n  return (\r\n    <ContactsListStyled>\r\n      <Table bordered striped hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Phone</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {contacts.map((contact) => (\r\n            <tr key={contact.id}>\r\n              <td>{++i}</td>\r\n              <td>{contact.name}</td>\r\n              <td>{contact.number}</td>\r\n              <td>\r\n                <button\r\n                  className=\"contactDeleteBtn\"\r\n                  type=\"button\"\r\n                  onClick={() => dispatch(deleteContactOperation(contact.id))}\r\n                >\r\n                  <svg className=\"icon-user\">\r\n                    <use href={sprite + \"#icon-bin\"} />\r\n                  </svg>\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </ContactsListStyled>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionStyled = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .sectionTitle {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-size: 22px;\r\n    font-weight: 700;\r\n    margin: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SectionStyled } from \"./SectionStyled\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactPageContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: flex-start;\r\n`;\r\n","import React from \"react\";\r\nimport Filter from \"../components/filter/Filter\";\r\nimport ContactsForm from \"../components/contactsForm/ContactsForm\";\r\nimport ContactsList from \"../components/contactsList/ContactsList\";\r\nimport Section from \"../components/Section\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport { ContactPageContainer } from \"./ContactPageStyled\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLoading } from \"../redux/contacts/contactsSelectors\";\r\n\r\nconst ContactPage = ({ isLoading }) => {\r\n  return (\r\n    <ContactPageContainer>\r\n      {isLoading && (\r\n        <div className=\"loader\">\r\n          <Loader type=\"ThreeDots\" color=\"darkblue\" height={80} width={80} />\r\n        </div>\r\n      )}\r\n      <Section title={\"Add new contact\"}>\r\n        <ContactsForm />\r\n      </Section>\r\n      <Section title={\"List of contacts\"}>\r\n        <Filter />\r\n        <ContactsList />\r\n      </Section>\r\n    </ContactPageContainer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: getLoading(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactPage);\r\n","export default __webpack_public_path__ + \"static/media/project_sprites.399ae2ea.svg\";"],"sourceRoot":""}