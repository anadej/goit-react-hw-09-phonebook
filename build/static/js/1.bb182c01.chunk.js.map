{"version":3,"sources":["services/auth_api.js","components/auth/AuthStyled.js","components/auth/Auth.js","redux/auth/authOperations.js","pages/AuthPage.js","icons/project_sprites.svg"],"names":["API_KEY","register_URL","login_URL","registerUser","user","a","axios","post","returnSecureToken","res","baseURL","email","addUserToDB","registerData","data","id","name","loginUser","loginData","AuthContainer","styled","div","initialState","password","displayName","Auth","useState","state","setState","error","useSelector","getError","dispatch","useDispatch","isRegisterPage","useLocation","pathname","useEffect","alert","onHandleChange","e","target","value","prev","onSubmit","preventDefault","registerUserRequest","registerUserSuccess","registerUserError","message","loginUserRequest","loginUserSuccess","loginUserError","loginUserOperation","className","autoComplete","type","onChange","placeholder","minLength","required","href","sprite","AuthPage"],"mappings":"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","file":"static/js/1.bb182c01.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst API_KEY = \"AIzaSyDZKNiswL8RQXzhTtbuSF2zZEn4tMwubTI\";\r\nconst register_URL = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`;\r\nconst login_URL = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`;\r\nconst baseURL = \"https://phonebook-d66d1-default-rtdb.firebaseio.com\";\r\n\r\nexport const registerUser = async (user) => {\r\n  try {\r\n    const res = await axios.post(register_URL, {\r\n      ...user,\r\n      returnSecureToken: true,\r\n    });\r\n    const addUserToDB = await axios.post(baseURL + \"/users.json\", {\r\n      email: user.email,\r\n    });\r\n    return {\r\n      registerData: res.data,\r\n      id: addUserToDB.data.name,\r\n    };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const loginUser = async (user) => {\r\n  try {\r\n    const res = await axios.post(login_URL, {\r\n      ...user,\r\n      returnSecureToken: true,\r\n    });\r\n    return { loginData: res.data };\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const AuthContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 20px 0;\r\n  color: darkblue;\r\n\r\n  .user-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 280px;\r\n    padding: 10px;\r\n    border: 1px solid lightgray;\r\n    border-radius: 16px;\r\n  }\r\n  .user-form-title {\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n  }\r\n  .user-form-label {\r\n    position: relative;\r\n    margin-bottom: 8px;\r\n    padding-top: 8px;\r\n  }\r\n  .user-form-input {\r\n    height: 30px;\r\n    width: 100%;\r\n    padding-left: 8px;\r\n    margin: 10px 0;\r\n    outline: none;\r\n    border: 1px solid cornflowerblue;\r\n    border-radius: 14px;\r\n  }\r\n  .user-form-input:focus + .icon-user,\r\n  .user-form-input:not(:placeholder-shown) + .icon-user {\r\n    opacity: 0;\r\n  }\r\n  .user-form-input:not(:placeholder-shown)::placeholder {\r\n    opacity: 0;\r\n  }\r\n  .user-form-input:focus::placeholder {\r\n    opacity: 0;\r\n  }\r\n  .user-form-input::placeholder {\r\n    color: cornflowerblue;\r\n    padding-left: 25px;\r\n    font-size: 14px;\r\n    transition: opacity 300ms linear;\r\n  }\r\n  .icon-user {\r\n    position: absolute;\r\n    bottom: 20px;\r\n    left: 16px;\r\n    width: 12px;\r\n    height: 12px;\r\n    fill: cornflowerblue;\r\n    transition: opacity 300ms linear;\r\n  }\r\n  .user-form-button {\r\n    align-self: center;\r\n    width: 120px;\r\n    height: 24px;\r\n    background-color: cornflowerblue;\r\n    border: none;\r\n    border-radius: 14px;\r\n    color: white;\r\n    text-transform: uppercase;\r\n    padding: 0 20px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  registerUserOperation,\r\n  loginUserOperation,\r\n} from \"../../redux/auth/authOperations\";\r\nimport { AuthContainer } from \"./AuthStyled\";\r\nimport sprite from \"../../icons/project_sprites.svg\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getError } from \"../../redux/auth/authSelector\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  displayName: \"\",\r\n};\r\n\r\nconst Auth = () => {\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const error = useSelector(getError);\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const isRegisterPage = location.pathname === \"/register\";\r\n\r\n  useEffect(() => {\r\n    if (isRegisterPage && error === \"Request failed with status code 400\") {\r\n      alert(\"User with this name is already registered.\");\r\n    }\r\n    if (!isRegisterPage && error === \"Request failed with status code 400\") {\r\n      alert(\"User not found! Input correct login data.\");\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [error]);\r\n\r\n  const onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = state;\r\n    isRegisterPage\r\n      ? dispatch(registerUserOperation(state))\r\n      : dispatch(loginUserOperation({ email, password }));\r\n  };\r\n\r\n  return (\r\n    <AuthContainer>\r\n      <form\r\n        onSubmit={onHandleSubmit}\r\n        className=\"user-form\"\r\n        autoComplete=\"off\"\r\n        name=\"userForm\"\r\n      >\r\n        {isRegisterPage ? (\r\n          <p className=\"user-form-title\">Register</p>\r\n        ) : (\r\n          <p className=\"user-form-title\">Login</p>\r\n        )}\r\n        {isRegisterPage && (\r\n          <label className=\"user-form-label\">\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"displayName\"\r\n              onChange={onHandleChange}\r\n              value={state.displayName}\r\n              className=\"user-form-input\"\r\n              placeholder=\"Jony English\"\r\n              minLength=\"3\"\r\n              autoComplete=\"on\"\r\n              required\r\n            />\r\n            <svg className=\"icon-user\">\r\n              <use href={sprite + \"#icon-user\"} />\r\n            </svg>\r\n          </label>\r\n        )}\r\n        <label className=\"user-form-label\">\r\n          Email\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            onChange={onHandleChange}\r\n            value={state.email}\r\n            className=\"user-form-input\"\r\n            placeholder=\"jony@gmail.com\"\r\n            minLength=\"3\"\r\n            autoComplete=\"on\"\r\n            required\r\n          />\r\n          <svg className=\"icon-user\">\r\n            <use href={sprite + \"#icon-drawer\"} />\r\n          </svg>\r\n        </label>\r\n        <label className=\"user-form-label\">\r\n          Password\r\n          <input\r\n            type=\"text\"\r\n            name=\"password\"\r\n            onChange={onHandleChange}\r\n            value={state.password}\r\n            className=\"user-form-input\"\r\n            placeholder=\"Qwerty123\"\r\n            autoComplete=\"on\"\r\n            required\r\n          />\r\n          <svg className=\"icon-user\">\r\n            <use href={sprite + \"#icon-user\"} />\r\n          </svg>\r\n        </label>\r\n        <button type=\"submit\" className=\"user-form-button\">\r\n          {isRegisterPage ? \"Register\" : \"Login\"}\r\n        </button>\r\n      </form>\r\n    </AuthContainer>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { loginUser, registerUser } from \"../../services/auth_api\";\r\nimport {\r\n  registerUserRequest,\r\n  registerUserSuccess,\r\n  registerUserError,\r\n  loginUserRequest,\r\n  loginUserSuccess,\r\n  loginUserError,\r\n} from \"./authAction\";\r\n\r\nconst registerUserOperation = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch(registerUserRequest());\r\n    const res = await registerUser(user);\r\n    dispatch(registerUserSuccess(res.registerData));\r\n  } catch (error) {\r\n    dispatch(registerUserError(error.message));\r\n  }\r\n};\r\n\r\nconst loginUserOperation = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch(loginUserRequest());\r\n    const res = await loginUser(user);\r\n    dispatch(loginUserSuccess(res.loginData));\r\n  } catch (error) {\r\n    dispatch(loginUserError(error.message));\r\n  }\r\n};\r\n\r\nexport { registerUserOperation, loginUserOperation };\r\n","import React from \"react\";\r\nimport Auth from \"../components/auth/Auth\";\r\n\r\nconst AuthPage = () => {\r\n  return (\r\n    <>\r\n      <Auth />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","export default __webpack_public_path__ + \"static/media/project_sprites.399ae2ea.svg\";"],"sourceRoot":""}